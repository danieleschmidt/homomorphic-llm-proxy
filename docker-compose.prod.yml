version: '3.8'

services:
  fhe-proxy:
    build:
      context: .
      dockerfile: Dockerfile.multi-region
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: fhe-llm-proxy:production
    container_name: fhe-proxy-prod
    restart: unless-stopped
    ports:
      - "8080:8080"  # Main API
      - "9090:9090"  # Metrics
    environment:
      # Basic configuration
      - FHE_HOST=0.0.0.0
      - FHE_PORT=8080
      - FHE_METRICS_PORT=9090
      - FHE_LOG_LEVEL=info
      - FHE_CONFIG_PATH=/app/config/config.toml
      - FHE_LOCALE_PATH=/app/locales
      
      # Regional and compliance settings
      - FHE_REGION=${REGION:-us-east-1}
      - FHE_COMPLIANCE_MODE=${COMPLIANCE_MODE:-gdpr}
      - GDPR_ENABLED=true
      - CCPA_ENABLED=true
      - HIPAA_ENABLED=false
      
      # API Keys (set these in production)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # Performance optimization
      - RUST_LOG=info
      - RUST_BACKTRACE=1
      - RUST_LOG_STYLE=always
      
      # Security
      - FHE_API_KEY_HEADER=X-API-Key
      - FHE_REQUIRE_HTTPS=true
      
      # Database connection
      - DATABASE_URL=${DATABASE_URL:-}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      
    volumes:
      - ./config.toml:/app/config/config.toml:ro
      - ./locales:/app/locales:ro
      - ./certs:/app/certs:ro
      - fhe_logs:/app/logs
      - fhe_data:/var/lib/fhe-proxy
    
    healthcheck:
      test: ["CMD", "./health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G
    
    security_opt:
      - no-new-privileges:true
    
    networks:
      - fhe-network

  redis:
    image: redis:7-alpine
    container_name: fhe-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - fhe-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: fhe-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - fhe-network

  grafana:
    image: grafana/grafana:latest
    container_name: fhe-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - fhe-network

  nginx:
    image: nginx:alpine
    container_name: fhe-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - fhe-proxy
    networks:
      - fhe-network

volumes:
  fhe_logs:
    driver: local
  fhe_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  fhe-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16