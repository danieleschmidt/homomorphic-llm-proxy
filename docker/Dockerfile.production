# Multi-stage production Dockerfile for FHE LLM Proxy
# Optimized for security, performance, and global deployment

# Build stage
FROM rust:1.89-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy Cargo files for dependency caching
COPY Cargo.toml Cargo.lock ./

# Cache dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs
RUN cargo build --release --features tokio-runtime
RUN rm -rf src

# Copy source code
COPY src ./src
COPY config ./config

# Build the application
RUN cargo build --release --features tokio-runtime --bin fhe-proxy

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN groupadd -r fhe && useradd --no-log-init -r -g fhe fhe

# Create application directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/target/release/fhe-proxy ./fhe-proxy
COPY --from=builder /app/config ./config

# Set ownership and permissions
RUN chown -R fhe:fhe /app
RUN chmod +x ./fhe-proxy

# Switch to non-root user
USER fhe

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose ports
EXPOSE 8080 9090

# Environment variables
ENV RUST_LOG=info
ENV RUST_BACKTRACE=1
ENV FHE_CONFIG_PATH=/app/config/fhe-proxy.toml

# Start the application
CMD ["./fhe-proxy"]