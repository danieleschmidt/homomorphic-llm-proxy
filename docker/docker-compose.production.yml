version: '3.8'

services:
  fhe-proxy:
    build:
      context: ..
      dockerfile: docker/Dockerfile.production
    image: ghcr.io/terragon-labs/fhe-proxy:latest
    container_name: fhe-proxy
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - RUST_LOG=info
      - RUST_BACKTRACE=1
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - FHE_CONFIG_PATH=/app/config/fhe-proxy.toml
    volumes:
      - ../config:/app/config:ro
      - fhe_data:/app/data
    networks:
      - fhe_network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  prometheus:
    image: prom/prometheus:latest
    container_name: fhe-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - fhe_network

  grafana:
    image: grafana/grafana:latest
    container_name: fhe-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - fhe_network

  nginx:
    image: nginx:alpine
    container_name: fhe-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - fhe-proxy
    networks:
      - fhe_network

volumes:
  fhe_data:
  prometheus_data:
  grafana_data:

networks:
  fhe_network:
    driver: bridge