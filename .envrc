# Direnv configuration for development environment
# Install direnv: https://direnv.net/

# Export development environment variables
export RUST_LOG=debug
export RUST_BACKTRACE=1
export FHE_TEST_MODE=true
export DEV_MODE=true

# GPU development settings
export CUDA_VISIBLE_DEVICES=0
export NVIDIA_VISIBLE_DEVICES=all

# Python environment
export PYTHONPATH="${PWD}/python:${PYTHONPATH}"
export PYTHON_ENV=development

# Docker development
export COMPOSE_FILE=docker-compose.yml:docker-compose.override.yml

# Load local .env file if it exists
if [ -f .env.local ]; then
  dotenv .env.local
fi

# Activate Python virtual environment if it exists
if [ -d python/.venv ]; then
  source python/.venv/bin/activate
fi

# Add local bin to PATH for development tools
export PATH="${PWD}/scripts:${PWD}/bin:${PATH}"

# Set up development aliases
alias build="just build"
alias test="just test"
alias lint="just lint"
alias fmt="just fmt"
alias ci="just ci-check"
alias dev="just dev"
alias logs="just logs"

# Performance monitoring
export RUST_PROFILE=dev
export CARGO_PROFILE_DEV_DEBUG=true

# Security settings for development
export FHE_KEY_ROTATION_DISABLED=true
export DISABLE_AUTH_FOR_TESTING=false

echo "ðŸš€ FHE LLM Proxy development environment loaded"
echo "   - Rust logging: ${RUST_LOG}"
echo "   - Python path: ${PYTHONPATH}"
echo "   - GPU devices: ${CUDA_VISIBLE_DEVICES}"
echo ""
echo "Available commands:"
echo "   just --list    # Show all available commands"
echo "   just dev       # Start development server"
echo "   just test      # Run tests"